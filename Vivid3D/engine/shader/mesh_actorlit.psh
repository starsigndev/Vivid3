#include "common.hlsl"

struct PSInput
{
    float4 Pos   : SV_POSITION;
    float4 Color : COLOR0;
    float3 Norm : NORMAL0;
    float3 Uv : TEX_COORD;
    float3 TLP : NORMAL1;
    float3 TVP : NORMAL2;
    float3 TFP : NORMAL3;
    float3 v_LightPos : POSITION1;
    float3 v_CameraPos : POSITION2;
    float3 v_LightProp : POSITION3;
    float3 fragPos : POSITION4;
    float3 v_LightDiff : POSITION5;
    float3 v_LightSpec : POSITION6;
    int4 v_LightMode : POSITION8;
    float3 localNormal : NORMAL4;
    float4 v_renderProps : POSITION7;
    float3 v_LightDir : POSITION9;
    float3 v_LightCone : POSITION10;
   // float3 Norm : NORMAL0;x
};

struct PSOutput
{
    float4 Color : SV_TARGET;
};

// Note that if separate shader objects are not supported (this is only the case for old GLES3.0 devices), vertex
// shader output variable name must match exactly the name of the pixel shader input variable.
// If the variable has structure type (like in this example), the structure declarations must also be identical.
void main(in  PSInput  PSIn,
    out PSOutput PSOut)
{

     float4 col = float4(1, 0, 0, 1);
  
    float light = light_GetDist(PSIn.v_LightPos,PSIn.fragPos,PSIn.v_LightProp.x);

    float3 tNormal = light_GetNormal(PSIn.Uv.xy);
 
    float spec = 0.0;

 


       

 LightValues lighting;

     lighting = CalculateLighting(PSIn.v_LightMode[0],tNormal,PSIn.TLP,PSIn.TFP,PSIn.TVP,PSIn.v_LightPos,PSIn.fragPos,PSIn.v_LightDir,PSIn.v_LightCone,PSIn.localNormal);

    float shadowVal;

   shadowVal = light_GetShadow(PSIn.fragPos,PSIn.v_LightPos,PSIn.v_LightProp.x);




 float4 ffcol =((v_Texture.Sample(v_Texture_sampler, PSIn.Uv) * float4(PSIn.v_LightDiff.x * lighting.light, PSIn.v_LightDiff.y * lighting.light, PSIn.v_LightDiff.z * lighting.light, 1.0)));

     float3 tSpec = v_TextureSpec.Sample(v_TextureSpec_sampler,PSIn.Uv).rgb;

 ffcol.rgb += float3(lighting.spec*PSIn.v_LightSpec.x,lighting.spec*PSIn.v_LightSpec.y,lighting.spec*PSIn.v_LightSpec.z) * tSpec;



    ffcol.rgb = ffcol.rgb * shadowVal;

    ffcol.rgb = ffcol.rgb;
    ffcol.a = 1.0;
 
 



    PSOut.Color = ffcol;
}

//